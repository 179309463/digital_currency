<style>
.searchForm2 {
  float: right
}

.searchForm2 input {
  width: 0 !important;
  height: 20px;
  border: 0;
  border-bottom: 1px solid #ddd;
  border-radius: 0;
  transition: all .3s;
  padding: 3px 0
}

.searchForm2 .icon-search {
  position: relative;
  right: 0
}

.searchForm2 input.open {
  width: 260px !important;
  padding: 3px 10px;
  padding-right: 30px
}

.searchForm2 form{
    margin-top: 0;
}
</style>            
<div class="searchForm searchForm2">
  <form action="">
    <input type="text" id="search2" class="open" placeholder="输入关键词...">
    <i class="icon-search" onclick="search(document.getElementById('search2').value)"></i>
    <span class="searchBtn">搜索</span>
  </form>
  <script type="text/javascript">      
    autoComplete($('#search2'));

    function refreshUserticker() {
      setInterval(function () {
          var page = $("#usertickerpage").val();
          $.ajax({
              url: "/currencies/userticker.json?page=" + page,
              async: true,
              xhrFields: {
                  withCredentials: true
              },
              dataType: "json",
              success: function (data) {

                  if (data.TickerList.length > 0) {

                      for (var i = 0; i < data.TickerList.length; i++) {
                          var rowId = '#tr_' + data.TickerList[i].CoinCode + "_" + data.TickerList[i].SiteCode + "_" + data.TickerList[i].CoinSymbolPair.replace("/", "_");
                          var tickerRow = $(rowId);
                          if (0 == tickerRow.length) {
                              continue;
                          }



                          updateUserTickerData(tickerRow, 3, "¥" + data.TickerList[i].Last_Cny);
                          if (0 == data.TickerList[i].SiteCode.length)
                          {
                              updateUserTickerData(tickerRow, 4, "$" + data.TickerList[i].Last);
                          } else {
                              updateUserTickerData(tickerRow, 4, data.TickerList[i].Last);
                          }
                         
                          updateUserTickerData(tickerRow, 5, data.TickerList[i].Vol);
                          changeTd = tickerRow.find('td').eq(6)
                          var changePercent = data.TickerList[i].Change + "%";
                          changeTd.removeClass('text-green').removeClass('text-red');
                          if (data.TickerList[i].Change > 0) {
                              changeTd.text(changePercent).css('background', '#eee').animate({ backgroundColor: 'transparent' }, 1500).addClass('text-green');
                          } else if (data.TickerList[i].Change < 0) {
                              changeTd.text(changePercent).css('background', '#eee').animate({ backgroundColor: 'transparent' }, 1500).addClass('text-red');
                          } else {
                              changeTd.text(changePercent).css('background', '#eee').animate({ backgroundColor: 'transparent' }, 1500);
                          }

                      }

                  }

              }
          });
      }, 30000);

    }

    function updateUserTickerData(tickerRow, cellIndex, cellValue) {
      var lastValue = tickerRow.find('td').eq(cellIndex).find("span").html();
      var curValue = cellValue;
      if (lastValue == curValue) {
          return;
      }

      var change = 0;
      if (lastValue.replace("¥", "") > 0 && "?" != lastValue) {
          change = parseFloat(curValue.replace("¥", "")) - parseFloat(lastValue.replace("¥", ""));
      }else if (lastValue.replace("$", "") > 0 && "?" != lastValue) {
          change = parseFloat(curValue.replace("$", "")) - parseFloat(lastValue.replace("$", ""));
      }
      if (change > 0) {
          tickerRow.find('td').eq(cellIndex).find('span').text(cellValue).css('background', '#eee').animate({ backgroundColor: 'transparent' }, 1500).addClass('text-green');
      } else if (change < 0) {
          tickerRow.find('td').eq(cellIndex).find('span').text(cellValue).css('background', '#eee').animate({ backgroundColor: 'transparent' }, 1500).addClass('text-red');
      } else {
          tickerRow.find('td').eq(cellIndex).find('span').text(cellValue).css('background', '#eee').animate({ backgroundColor: 'transparent' }, 1500);
      }
      (function ($) {
          var b = setTimeout(function () {
              tickerRow.find('td').eq(cellIndex).find('span').removeClass('text-green').removeClass('text-red');
          }, 10000);

      })(jQuery);
    }

    refreshUserticker();
  </script>
</div>